plugins {
    id 'java-library'
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'dev.architectury.loom' version '0.12.0-SNAPSHOT' apply false
    id 'org.ajoberstar.reckon' version '0.13.1'
    id "io.github.pacifistmc.forgix" version "1.2.6"
}

architectury {
    minecraft = rootProject.minecraft_version
}

reckon {
    scopeFromProp()
    stageFromProp('beta', 'rc', 'final')
}

subprojects {
    apply plugin: 'dev.architectury.loom'

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }

    build.finalizedBy(mergeJars)
    assemble.finalizedBy(mergeJars)
}

forgix {
    group = rootProject.group
    mergedJarName = "${rootProject.name}-${rootProject.version}-universal.jar"
    outputDir = "build/libs"

    forge {
        jarLocation = "build/libs/${rootProject.name}-${rootProject.version}-forge.jar"
        mixin "mca.mixin.json"
    }

    fabric {
        jarLocation = "build/libs/${rootProject.name}-${rootProject.version}-fabric.jar"
    }

    quilt {
        jarLocation = "build/libs/${rootProject.name}-${rootProject.version}-quilt.jar"
    }
}

allprojects {
    apply plugin: "architectury-plugin"

    group = rootProject.group
    description = rootProject.displayname
    archivesBaseName = rootProject.name

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
        // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
        // We'll use that if it's available, but otherwise we'll use the older option.
        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }

    java {
        withSourcesJar()
    }
}