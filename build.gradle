plugins {
    id 'java-library'
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'dev.architectury.loom' version '0.12.0-SNAPSHOT' apply false
    id "io.github.pacifistmc.forgix" version "1.2.6"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }

    build.finalizedBy(mergeJars)
    assemble.finalizedBy(mergeJars)
}


def getAppVersion = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    def commitId = stdout.toString().replace("\n", "").replace("\r", "").trim()
    stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'tag', '--points-at', commitId
        standardOutput = stdout
    }
    def tagName = stdout.toString().replace("\n", "").replace("\r", "").trim()
    def versionName = '0-git-' + commitId
    if (tagName != null && "" != tagName) {
        versionName = tagName
    }
    return versionName
} as Object

allprojects {
    apply plugin: "architectury-plugin"

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    group = rootProject.group
    description = rootProject.displayname
    archivesBaseName = rootProject.name
    version = getAppVersion()

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

forgix {
    group = rootProject.group
    mergedJarName = "${rootProject.name}-${rootProject.version}-universal.jar"
    outputDir = "build/libs"

    forge {
        jarLocation = "build/libs/${rootProject.name}-${rootProject.version}-forge.jar"
        mixin "mca.mixin.json"
    }

    fabric {
        jarLocation = "build/libs/${rootProject.name}-${rootProject.version}-fabric.jar"
    }

    quilt {
        jarLocation = "build/libs/${rootProject.name}-${rootProject.version}-quilt.jar"
    }
}