plugins {
  id "com.github.johnrengelman.shadow" version "5.0.0"
  id "com.modrinth.minotaur" version "2.+"
}

configurations {
  shadowCommon
}

architectury {
  platformSetupLoomIde()
  fabric()
}

minecraft {
  refmapName = 'mca.mixin.refmap.json'
  accessWidener 'src/main/resources/mca.aw'
}

dependencies {
  modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
  modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

  implementation(project(path: ":common")) {
    transitive = false
  }
  developmentFabric(project(path: ":common")) {
    transitive = false
  }
  shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) {
    transitive = false
  }
}

processResources {
  inputs.property "version", project.version.toString()

  filesMatching("fabric.mod.json") {
    expand "version": project.version.toString()
  }

  from 'LICENSE'
}

shadowJar {
  configurations = [project.configurations.shadowCommon]
  classifier "dev-shadow"
}

remapJar {
  input.set shadowJar.archiveFile
  dependsOn shadowJar
  classifier "fabric"
}

jar {
  classifier "dev"
}

java {
  withSourcesJar()
}

sourcesJar {
  duplicatesStrategy 'exclude'
  def commonSources = project(":common").sourcesJar
  dependsOn commonSources
  from commonSources.archiveFile.map { zipTree(it) }
}


modrinth {
  token = System.getenv("MODRINTH_TOKEN")
  projectId = "1W98a849"
  versionNumber = version.toString() + "_fabric"
  versionName = "[Fabric 1.16.5] MCA Reborn - " + version
  changelog = "[Changelog](https://github.com/Luke100000/minecraft-comes-alive/tag/${version.toString()})"
  versionType = "release"
  uploadFile = remapJar
  gameVersions = ["1.16.5"]
  loaders = ["fabric"]
  dependencies = []
}